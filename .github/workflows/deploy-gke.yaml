name: Deploy .NET app to GCP

on:
  workflow_dispatch:
  push:
env:
  PROJECT_ID: astral-subject-452906-a1
  PROJECT_NUMBER: 27210028263

  CLUSTER: gke-demo-cluster
  CLUSTER_ZONE: us-central1-a

  REPOSITORY: clouddemo
  REPOSITORY_REGION: us-central1

  IMAGE: clouddemo
jobs:
  deploy:
    name: Deploy application to GKE
    runs-on: self-hosted    # ubuntu-latest # Use GCP-hosted runner or self-hosted if preferred

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: astral-subject-452906-a1
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Build solution
        run: |-
          dotnet publish applications/clouddemo/netcore/CloudDemo.MvcCore.sln \
            --configuration Release \
            --framework net6.0
#      - name: Build Docker image
#        run: docker build -t githubactions-gke-demo_doc:'${{ github.sha }}' applications/clouddemo/netcore

#      - name: Authenticate to Google Container Registry (GCR)
#        run: |
#          gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}
#          gcloud config set account akhand@astral-subject-452906-a1.iam.gserviceaccount.com
#          gcloud auth configure-docker
      - name: Create image tag
        run: echo "IMAGE_TAG=${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Lock image version in deployment.yaml
        run: sed -i 's|CLOUDDEMO_IMAGE|${{ env.IMAGE_TAG }}|g' applications/clouddemo/netcore/deployment.yaml

      - name: Build Docker image
        run: docker build --tag "${{ env.IMAGE_TAG }}" applications/clouddemo/netcore

      - name: Publish Docker image to Google Artifact Registry
        run: docker push "${{ env.IMAGE_TAG }}"
#      - name: Tag and push Docker image to GCR
#        run: |
#          docker tag githubactions-gke-demo_doc:'${{ github.sha }}' gcr.io/astral-subject-452906-a1/githubactions-gke-demo_doc:'${{ github.sha }}'
#          docker push gcr.io/astral-subject-452906-a1/githubactions-gke-demo_doc:'${{ github.sha }}'

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials gke-demo-cluster \
            --region us-central1-a \
            --project astral-subject-452906-a1

      - name: Deploy application to GKE
        run: kubectl apply -f applications/clouddemo/netcore/deployment.yaml
